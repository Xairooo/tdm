name: Build

on:
    workflow_dispatch:
    push:
        branch:
            - develop
        tags:
            - 'v*'
        paths-ignore:
            - '.github/**'        # Ignore changes towards the .github directory
            - '**.md'             # Do no build if *.md files changes

jobs:
    build-windows:
        runs-on: windows-2019
        continue-on-error: true
        strategy:
            matrix:
                architecture:
                    - x86
                    - x64
        steps:
            -   name: Checkout
                uses: actions/checkout@v3
            -   name: Install Python
                uses: actions/setup-python@v4
                with:
                    python-version: '3.9'
                    architecture: ${{ matrix.architecture }}
            -   name: Install requirements
                run: |
                    pip install -r requirements.txt -r requirements_build.txt
            -   name: Run PyInstaller
                run: |
                    python -m PyInstaller tdmgr.spec
            -   uses: actions/upload-artifact@v3
                with:
                    name: app
                    path: dist/tdmgr_*.exe


    build-ubuntu:
        runs-on: ubuntu-20.04
        continue-on-error: true
        steps:
            -   name: Checkout
                uses: actions/checkout@v3
            -   name: Install Python
                uses: actions/setup-python@v4
                with:
                    python-version: '3.9'
            -   name: Install requirements
                run: |
                    pip install -r requirements.txt -r requirements_build.txt
            -   name: Run PyInstaller
                run: |
                    python -m PyInstaller tdmgr.spec
            -   name: See dist directory
                run: ls dist
            -   name: 'gzip file'
                run: gzip dist/tdmgr_*
            -   name: 'show gzip'
                run: ls dist
            -   uses: actions/upload-artifact@v3
                with:
                    name: app
                    path: dist/tdmgr_*.gz


    build-macos:
        runs-on: macOS-12
        continue-on-error: true
        steps:
            -   name: Checkout
                uses: actions/checkout@v3
            -   name: Install Python
                uses: actions/setup-python@v4
                with:
                    python-version: '3.9'
            -   name: Install requirements
                run: |
                    pip install -r requirements.txt -r requirements_build.txt
                    npm install --global create-dmg
            -   name: Run PyInstaller
                run: |
                    python -m PyInstaller tdmgr_mac.spec
            -   name: See dist directory
                run: ls dist
            -   name: setenv release tag
                run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
            -   name: Rename app
                run: |
                    mv dist/tdmgr*.app dist/tdmgr_${{ env.RELEASE_VERSION }}_macOS.app
            -   name: 'Tar files'
                run: tar -cvf dist/tdmgr_${{ env.RELEASE_VERSION }}_macOS.tar dist/*
            -   name: 'Upload Artifact'
                uses: actions/upload-artifact@v3
                with:
                    name: app
                    path: dist/*.tar

    release:
        needs: [ build-windows, build-ubuntu, build-macos ]
        runs-on: ubuntu-latest
        continue-on-error: true
        steps:
            -   name: Exit if not on master branch
                if: endsWith(github.ref, 'develop') == false
                run: exit -1
            -   name: Download artifacts
                uses: actions/download-artifact@v3
                with:
                    name: app
                    path: ./dist
            -   name: setenv release tag
                run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
            -   name: Release
                uses: jason2866/action-gh-release@v1.1
                with:
                    tag_name: ${{ env.RELEASE_VERSION }}
                    prerelease: false
                    files: dist/*
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
